"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("jest");
const semver_1 = require("./semver");
describe("Semver tests", () => {
    it("validates given semver", () => {
        expect(semver_1.Semver.isValid("abc")).toBeFalsy();
        expect(semver_1.Semver.isValid("1.2-rc.3")).toBeFalsy();
        expect(semver_1.Semver.isValid("a.b.c")).toBeFalsy();
        expect(semver_1.Semver.isValid("a.1.b")).toBeFalsy();
        expect(semver_1.Semver.isValid("1.2.a")).toBeFalsy();
        expect(semver_1.Semver.isValid(">1.2.3")).toBeFalsy();
        expect(semver_1.Semver.isValid(">=1.2.3")).toBeFalsy();
        expect(semver_1.Semver.isValid("^1.2.3")).toBeFalsy();
        expect(semver_1.Semver.isValid("1.2.3")).toBeTruthy();
        expect(semver_1.Semver.isValid("1")).toBeTruthy();
        expect(semver_1.Semver.isValid("0.1")).toBeTruthy();
        expect(semver_1.Semver.isValid("00.1.0003")).toBeTruthy();
        expect(semver_1.Semver.isValid("00.1.0003.004")).toBeTruthy();
        expect(semver_1.Semver.isValid("1.2.3-rc-4")).toBeTruthy();
    });
    it("checks if given 2 semvers are equal", () => {
        expect(() => semver_1.Semver.isSame("abc", "1.2.3")).toThrow();
        expect(() => semver_1.Semver.isSame("1.2-rc.3", "1.2-rc.3")).toThrow();
        expect(() => semver_1.Semver.isSame("a.b.c", "a.b")).toThrow();
        expect(() => semver_1.Semver.isSame("a.1.b", "a.1.b.c")).toThrow();
        expect(semver_1.Semver.isSame("1.2.3", "1.2")).toBeFalsy();
        expect(semver_1.Semver.isSame("00.1.0003.004", "0.1.0003")).toBeFalsy();
        expect(semver_1.Semver.isSame("1.2.3-rc-4", "1.2.3")).toBeFalsy();
        expect(semver_1.Semver.isSame("1", "01")).toBeTruthy();
        expect(semver_1.Semver.isSame("0001", "01")).toBeTruthy();
        expect(semver_1.Semver.isSame("0001", "1")).toBeTruthy();
        expect(semver_1.Semver.isSame("0.1", "0.1.0")).toBeTruthy();
        expect(semver_1.Semver.isSame("00.01.3.0", "0.01.3")).toBeTruthy();
        expect(semver_1.Semver.isSame("00.1.0003", "0.1.0003")).toBeTruthy();
    });
    it("checks if semver 1 is greater than semver 2", () => {
        expect(() => semver_1.Semver.isGreaterThan("abc", "def")).toThrow();
        expect(() => semver_1.Semver.isGreaterThan("1.2-rc.3", "1.2.3-rc.3")).toThrow();
        expect(() => semver_1.Semver.isGreaterThan("a.b.c", "a.b")).toThrow();
        expect(() => semver_1.Semver.isGreaterThan("a.1.b", "a.0.b")).toThrow();
        expect(semver_1.Semver.isGreaterThan("1.2.3", "1.2")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThan("00.1.0003.004", "0.1.0003")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThan("1", "01")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThan("0001", "01")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThan("0001", "10")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThan("0.1.0", "0.1")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThan("2.5.1", "2.15.0")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThan("00.1.3.0", "0.01.2")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThan("2", "1.99.99")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThan("2", "1")).toBeTruthy();
    });
    it("checks if semver 1 is lesser than semver 2", () => {
        expect(() => semver_1.Semver.isLessThan("abc", "def")).toThrow();
        expect(semver_1.Semver.isLessThan("1.2.3", "1.2")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("00.1.0003.004", "0.1.0003")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("1", "01")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("0001", "01")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("0001", "10")).toBeTruthy();
        expect(semver_1.Semver.isLessThan("0.1.0", "0.1")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("2.5.1", "2.15.0")).toBeTruthy();
        expect(semver_1.Semver.isLessThan("00.1.3.0", "0.01.2")).toBeFalsy();
        expect(semver_1.Semver.isLessThan("1.99.99", "2")).toBeTruthy();
        expect(semver_1.Semver.isLessThan("2.0", "2.0.1")).toBeTruthy();
    });
    it("checks if semver 1 is greater than or equal to semver 2", () => {
        expect(() => semver_1.Semver.isGreaterThanOrEqual("abc", "def")).toThrow();
        expect(() => semver_1.Semver.isGreaterThanOrEqual("1.2-rc.3", "1.2.3-rc.3")).toThrow();
        expect(semver_1.Semver.isGreaterThanOrEqual("1.2.3", "1.2")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("00.1.0003.004", "0.1.0003")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("1", "01")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("0001", "01")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("0001", "10")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThanOrEqual("0.1.0", "0.1")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("2.5.1", "2.15.0")).toBeFalsy();
        expect(semver_1.Semver.isGreaterThanOrEqual("00.1.3.0", "0.01.2")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("2", "1.99.99")).toBeTruthy();
        expect(semver_1.Semver.isGreaterThanOrEqual("2", "1")).toBeTruthy();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VtdmVyLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZW12ZXIudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdCQUFjO0FBQ2QscUNBQWtDO0FBRWxDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFO0lBQzFCLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxHQUFHLEVBQUU7UUFDOUIsTUFBTSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUMxQyxNQUFNLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQy9DLE1BQU0sQ0FBQyxlQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDNUMsTUFBTSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUM1QyxNQUFNLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzVDLE1BQU0sQ0FBQyxlQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDN0MsTUFBTSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUM5QyxNQUFNLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRTdDLE1BQU0sQ0FBQyxlQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDN0MsTUFBTSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN6QyxNQUFNLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxlQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDakQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNyRCxNQUFNLENBQUMsZUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RELENBQUMsQ0FBQyxDQUFDO0lBR0gsRUFBRSxDQUFDLHFDQUFxQyxFQUFFLEdBQUcsRUFBRTtRQUMzQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN0RCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM5RCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN0RCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUUxRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNsRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUMvRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUV6RCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUM3QyxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNoRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUMvQyxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNuRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUMxRCxNQUFNLENBQUMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNoRSxDQUFDLENBQUMsQ0FBQztJQUdILEVBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxHQUFHLEVBQUU7UUFDbkQsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDM0QsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdkUsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDN0QsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDL0QsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDMUQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDdkUsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbkQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDdEQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDdEQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDekQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDNUQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDaEUsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDMUQsTUFBTSxDQUFDLGVBQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDeEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNENBQTRDLEVBQUUsR0FBRyxFQUFFO1FBQ2xELE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3hELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3RELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ25FLE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ25ELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3BELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3RELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzFELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzVELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZELE1BQU0sQ0FBQyxlQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzNELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHlEQUF5RCxFQUFFLEdBQUcsRUFBRTtRQUMvRCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsZUFBTSxDQUFDLG9CQUFvQixDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2xFLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxlQUFNLENBQUMsb0JBQW9CLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDOUUsTUFBTSxDQUFDLGVBQU0sQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNqRSxNQUFNLENBQUMsZUFBTSxDQUFDLG9CQUFvQixDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzlFLE1BQU0sQ0FBQyxlQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRyxFQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDM0QsTUFBTSxDQUFDLGVBQU0sQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUM5RCxNQUFNLENBQUMsZUFBTSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQzdELE1BQU0sQ0FBQyxlQUFNLENBQUMsb0JBQW9CLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDakUsTUFBTSxDQUFDLGVBQU0sQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuRSxNQUFNLENBQUMsZUFBTSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZFLE1BQU0sQ0FBQyxlQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDakUsTUFBTSxDQUFDLGVBQU0sQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMvRCxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIn0=